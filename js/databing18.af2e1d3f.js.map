{"version":3,"file":"js/databing18.af2e1d3f.js","mappings":"6MAOEA,EAAAA,EAAAA,GAAM,mB,8DANNA,EAAAA,EAAAA,GAKM,aAJJA,EAAAA,EAAAA,GAA+B,WAAAC,EAAAA,EAAAA,IAAxBC,EAAAC,kBAAc,IACrBH,EAAAA,EAAAA,GAA+B,WAAAC,EAAAA,EAAAA,IAAxBC,EAAAC,kBAAc,IACrBH,EAAAA,EAAAA,GAA+B,WAAAC,EAAAA,EAAAA,IAAxBC,EAAAC,kBAAc,IACrBH,EAAAA,EAAAA,GAA+B,WAAAC,EAAAA,EAAAA,IAAxBC,EAAAC,kBAAc,KAEvBC,GACAJ,EAAAA,EAAAA,GAKM,aAJJA,EAAAA,EAAAA,GAA8B,WAAAC,EAAAA,EAAAA,IAAvBC,EAAAG,iBAAe,IACtBL,EAAAA,EAAAA,GAA8B,WAAAC,EAAAA,EAAAA,IAAvBC,EAAAG,iBAAe,IACtBL,EAAAA,EAAAA,GAA8B,WAAAC,EAAAA,EAAAA,IAAvBC,EAAAG,iBAAe,IACtBL,EAAAA,EAAAA,GAA8B,WAAAC,EAAAA,EAAAA,IAAvBC,EAAAG,iBAAe,S,CAK1B,OACEC,IAAAA,GACE,MAAO,CACLC,IAAK,iBAET,EACAC,QAAS,CACPL,cAAAA,GAME,OALAM,QAAQC,IAAI,gBAKLC,KAAKJ,IAAIK,MAAM,IAAIC,UAAUC,KAAK,GAC3C,GAEFC,SAAU,CAWRV,eAAAA,GAME,OALAI,QAAQC,IAAI,qBAKLC,KAAKJ,IAAIK,MAAM,IAAIC,UAAUC,KAAK,GAC3C,I,QC9CJ,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://vue3-jjw-example/./src/views/functions/MethodVSComputed1.vue","webpack://vue3-jjw-example/./src/views/functions/MethodVSComputed1.vue?ff68"],"sourcesContent":["<template>\n  <div>\n    <h1>{{ reverseMessage() }}</h1>\n    <h1>{{ reverseMessage() }}</h1>\n    <h1>{{ reverseMessage() }}</h1>\n    <h1>{{ reverseMessage() }}</h1>\n  </div>\n  <hr />\n  <div>\n    <h1>{{ computedMessage }}</h1>\n    <h1>{{ computedMessage }}</h1>\n    <h1>{{ computedMessage }}</h1>\n    <h1>{{ computedMessage }}</h1>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: \"Hello Computed\",\n    };\n  },\n  methods: {\n    reverseMessage() {\n      console.log(\"이것은 메소드 입니다.\");\n      //split() 메서드는 받은 문자열을 인수에 있는 문자열로 나눠서 배열 - split('') 는 문자 하나하나를 배열로 만들고\n      //reverse() 메서드는 배열의 순서를 반대로 만들어 줍니다.\n      //join() 메서드는 배열의 값 사이에 인자값을 넣은 문자열을 만들어 줍니다.\n      //https://kpbro.tistory.com/3\n      return this.msg.split(\"\").reverse().join(\"\");\n    },\n  },\n  computed: {\n    /** 데이터\n     문법적으로 methods 와의 차이\n        - 리턴되는 값을 가짐(데이터처럼 취급)\n        - 파라미터가 없음 => 호출할 때 괄호없이 호출\n     언제 호출되는가?\n     한번 호출을 함 -> 캐시 공간에 저장함.\n     해당 데이터가 변화가 없으면, 함수를 호출하는게 아니고,\n     캐시에 있는 값을 그냥 리턴해줌\n     computedMessage: Hello Computed\n     */\n    computedMessage() {\n      console.log(\"이것은 computed 입니다.\");\n      //split() 메서드는 받은 문자열을 인수에 있는 문자열로 나눠서 배열 - split('') 는 문자 하나하나를 배열로 만들고\n      //reverse() 메서드는 배열의 순서를 반대로 만들어 줍니다.\n      //join() 메서드는 배열의 값 사이에 인자값을 넣은 문자열을 만들어 줍니다.\n      //https://kpbro.tistory.com/3\n      return this.msg.split(\"\").reverse().join(\"\");\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n","import { render } from \"./MethodVSComputed1.vue?vue&type=template&id=11605ad9\"\nimport script from \"./MethodVSComputed1.vue?vue&type=script&lang=js\"\nexport * from \"./MethodVSComputed1.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_toDisplayString","$options","reverseMessage","_hoisted_1","computedMessage","data","msg","methods","console","log","this","split","reverse","join","computed","__exports__","render"],"sourceRoot":""}